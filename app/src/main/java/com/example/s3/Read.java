/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.example.s3;

import org.apache.hadoop.conf.Configuration;
import org.apache.iceberg.*;
import org.apache.iceberg.catalog.Catalog;
import org.apache.iceberg.catalog.TableIdentifier;
import org.apache.iceberg.data.IcebergGenerics;
import org.apache.iceberg.data.Record;
import org.apache.iceberg.io.CloseableIterable;
import org.apache.iceberg.jdbc.JdbcCatalog;
import org.apache.iceberg.rest.RESTCatalog;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

public class Read {

    public static void main(String[] args) throws IOException {
        Map<String, String> properties = new HashMap<>();
        properties.put(CatalogProperties.CATALOG_IMPL, JdbcCatalog.class.getName());
        properties.put(CatalogProperties.URI, "jdbc:sqlite:file:/Users/ADASARI/work/learning/iceberg/catalog/catalogs-s3.db");
        properties.put(CatalogProperties.WAREHOUSE_LOCATION, "s3://iceberg-warehouse");
        properties.put("s3.endpoint", "http://localhost:4566");
        properties.put("s3.path-style-access", "true");
        properties.put("io-impl", "org.apache.iceberg.aws.s3.S3FileIO");

        Configuration conf = new Configuration();
        Catalog catalog = CatalogUtil.buildIcebergCatalog("test_rest_catalog", properties, conf);

        // Load the table from the catalog
        TableIdentifier tableIdentifier = TableIdentifier.of("jdbc_s3_namespace", "jdbc_table");
        Table table = catalog.loadTable(tableIdentifier);

        try (CloseableIterable<Record> records = IcebergGenerics.read(table).build()) {
            for (Record record : records) {
                System.out.println(record);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        TableScan scan = table.newScan();
        CloseableIterable<FileScanTask> tasks = scan.planFiles();

        for (FileScanTask task : tasks) {
            DataFile dataFile = task.file();
            System.out.println("Data file path: " + dataFile.path());
        }
    }
}
